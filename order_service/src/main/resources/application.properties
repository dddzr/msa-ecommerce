server.port=8085
spring.application.name=order-service

# eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
spring.cloud.gateway.discovery.locator.enabled=true 
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true

# Kafka Broker URL
spring.kafka.bootstrap-servers=localhost:9092

# Consumer Group ID (같은 그룹에 속한 소비자는 메시지를 나눠 가져감)
spring.kafka.consumer.group-id=order-service-group

# Key 및 Value 직렬화/역직렬화 설정
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Auto Commit 설정 (Consumer가 메시지 자동 커밋 여부)
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100

# Offset 설정: latest(가장 최근 메시지), earliest(처음부터 읽음)
spring.kafka.consumer.auto-offset-reset=latest

# DB
spring.datasource.url=jdbc:mariadb://localhost:3306/orders
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
spring.jpa.hibernate.ddl-auto=validate

#redis
spring.redis.host=localhost
spring.redis.port=6379
#spring.redis.password= # 비밀번호가 있으면 입력
spring.redis.timeout=6000ms

spring.redis.lettuce.pool.max-active=10
spring.redis.lettuce.pool.max-idle=5
spring.redis.lettuce.pool.min-idle=2
spring.redis.lettuce.pool.max-wait=2000ms